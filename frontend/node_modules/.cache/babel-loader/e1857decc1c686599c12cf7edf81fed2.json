{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectsmy\\\\CommentsSystem\\\\frontend\\\\src\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getComments as getCommentsApi } from \"../api\";\nimport Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    currentUserId\n  } = _ref;\n  const [backendComments, setBackendComments] = useState([]);\n  const rootComments = backendComments.filter(backendComment => backendComment.parentId === null);\n\n  const getReplies = commentId => {\n    return backendComments.filter(backendComment => backendComment.parentId === commentId).sort((a, b) => new Date(a.createAt).getTime() - new Date(b.createAt).getTime());\n  };\n\n  const addComment = (text, parentId) => {\n    console.log(\"\");\n  };\n\n  useEffect(() => {\n    getCommentsApi().then(data => {\n      setBackendComments(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comments-title\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form-title\",\n      children: \"Write comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      submitLabel: \"Write\",\n      handleSubmit: \"addComment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: rootComments.map(rootComment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: rootComment,\n        replies: getReplies(rootComment.id)\n      }, rootComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"fy2viQbXr+mhymu8nR89rB5bEGA=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","getComments","getCommentsApi","Comment","CommentForm","Comments","currentUserId","backendComments","setBackendComments","rootComments","filter","backendComment","parentId","getReplies","commentId","sort","a","b","Date","createAt","getTime","addComment","text","console","log","then","data","map","rootComment","id"],"sources":["D:/projectsmy/CommentsSystem/frontend/src/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getComments as getCommentsApi } from \"../api\";\r\nimport Comment from \"./Comment\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst Comments = ({ currentUserId }) => {\r\n    const [backendComments, setBackendComments] = useState([]);\r\n    const rootComments = backendComments.filter(\r\n        (backendComment)=>backendComment.parentId===null\r\n    );\r\n \r\n    const getReplies = commentId =>{\r\n        return backendComments\r\n        .filter(backendComment=>backendComment.parentId===commentId)\r\n        .sort(\r\n            (a,b)=>\r\n            new Date(a.createAt).getTime() - new Date(b.createAt).getTime()\r\n\r\n        );\r\n\r\n    };\r\n    const addComment = (text, parentId)=>{\r\n        console.log(\"\")\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getCommentsApi().then((data)=>{\r\n            setBackendComments(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n          <h3 className=\"comments-title\">Comments</h3>\r\n          <div className=\"comment-form-title\">Write comment</div>\r\n          <CommentForm submitLabel=\"Write\" handleSubmit=\"addComment\"/>\r\n          {/* <div className=\"comment-form-title\">Write comment</div> */}\r\n          {/* <CommentForm submitLabel=\"Write\" handleSubmit={addComment} /> */}\r\n          <div className=\"comments-container\">\r\n            {rootComments.map((rootComment) => (\r\n            \r\n            <Comment \r\n            key={rootComment.id} \r\n            comment={rootComment}\r\n            replies={getReplies(rootComment.id)}\r\n            />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\nexport default Comments;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAW,IAAIC,cAAxB,QAA8C,QAA9C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACpC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAMU,YAAY,GAAGF,eAAe,CAACG,MAAhB,CAChBC,cAAD,IAAkBA,cAAc,CAACC,QAAf,KAA0B,IAD3B,CAArB;;EAIA,MAAMC,UAAU,GAAGC,SAAS,IAAG;IAC3B,OAAOP,eAAe,CACrBG,MADM,CACCC,cAAc,IAAEA,cAAc,CAACC,QAAf,KAA0BE,SAD3C,EAENC,IAFM,CAGH,CAACC,CAAD,EAAGC,CAAH,KACA,IAAIC,IAAJ,CAASF,CAAC,CAACG,QAAX,EAAqBC,OAArB,KAAiC,IAAIF,IAAJ,CAASD,CAAC,CAACE,QAAX,EAAqBC,OAArB,EAJ9B,CAAP;EAQH,CATD;;EAUA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOV,QAAP,KAAkB;IACjCW,OAAO,CAACC,GAAR,CAAY,EAAZ;EACH,CAFD;;EAIAxB,SAAS,CAAC,MAAI;IACVE,cAAc,GAAGuB,IAAjB,CAAuBC,IAAD,IAAQ;MAC1BlB,kBAAkB,CAACkB,IAAD,CAAlB;IACH,CAFD;EAGH,CAJQ,EAIN,EAJM,CAAT;EAMA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAI,SAAS,EAAC,gBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,oBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,WAAD;MAAa,WAAW,EAAC,OAAzB;MAAiC,YAAY,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAK,SAAS,EAAC,oBAAf;MAAA,UACGjB,YAAY,CAACkB,GAAb,CAAkBC,WAAD,iBAElB,QAAC,OAAD;QAEA,OAAO,EAAEA,WAFT;QAGA,OAAO,EAAEf,UAAU,CAACe,WAAW,CAACC,EAAb;MAHnB,GACKD,WAAW,CAACC,EADjB;QAAA;QAAA;QAAA;MAAA,QAFC;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBC,CA7CL;;GAAMxB,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}